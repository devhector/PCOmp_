PARSER_BEGIN(Karloff)
import java.io.*;
public class Karloff {

  public static void main(String args[]) throws ParseException,IOException {
    
 Karloff analisador = new Karloff(new FileInputStream(args[0]));
 analisador.Karloff();
  }

}

PARSER_END(Karloff)

SKIP :
{
  " "
| "\t"
| "\n"
| "\r"
}

TOKEN :
{
  <MAIN: "main">
| <ACHAVES: "{">
| <FCHAVES: "}">
| <VOID: "void">
| <INT: "int">
| <BOOL: "bool">
| <VAR: "newVar">
| <PV: ";">
| <LPAR: "(">
| <RPAR: ")">

}

TOKEN :
{
  <IF: "if">
| <THEN: "then">
| <WHILE: "while">
| <REPEAT: "repeat">
| <UNTIL: "until">
| <RETURN: "return">
| <OUTPUT: "System.output">
| <FUNC: "func">
| <TRUE: "true">
| <FALSE: "false">
}

TOKEN :
{
  <NUM : (["0"-"9"])+("."(["0"-"9"])+)?("E"("+"|"-")?(["0"-"9"])+)?>
 |< ID: ["a"-"z","A"-"Z"] (["a"-"z","A"-"Z","0"-"9"])* (("_") (["a"-"z","A"-"Z","0"-"9"])+)*>

}

TOKEN :
{
  <SUM: "+">
| <SUB: "-">
| <MUL: "*">
| <DIV: "/">
| <ATR: "=">
| <EQ: "==">
| <LESS: "<">
| <GREATER: ">">
| <OR: "|">
| <AND: "&">
| <SEPARATOR: ",">
}



void Karloff () :
{Token t;}
{

(
  <MAIN> { System.out.println("Palavra reservada: main");}
| <VOID> { System.out.println("Palavra reservada: void");}
| <INT> { System.out.println("Palavra reservada: int");}
| <BOOL> { System.out.println("Palavra reservada: bool");}
| <VAR> { System.out.println("Palavra reservada: newVar");}
| <IF> { System.out.println("Palavra reservada: if");}
| <THEN> { System.out.println("Palavra reservada: then");}
| <WHILE> { System.out.println("Palavra reservada: while");}
| <REPEAT> { System.out.println("Palavra reservada: repeat");}
| <UNTIL> { System.out.println("Palavra reservada: until");}
| <RETURN> { System.out.println("Palavra reservada: return");}
| <OUTPUT> { System.out.println("Palavra reservada: System.output");}
| <TRUE> { System.out.println("Palavra reservada: true");}
| <FALSE> { System.out.println("Palavra reservada: false");}
| <ACHAVES> { System.out.println("Abre chaves: {");}
| <FCHAVES> { System.out.println("Fecha chaves: }");}
| t=<NUM> { System.out.println("Número: "+ t.image);}
| t=<ID> { System.out.println("Identificador: "+ t.image);}
| <PV> { System.out.println("Ponto e vírgula: ;");}
| <SUM> { System.out.println("Soma: +");}
| <SUB> { System.out.println("Subtração: -");}
| <MUL> { System.out.println("Multiplicação: *");}
| <DIV> { System.out.println("Divisão: /");}
| <ATR> { System.out.println("Atribuição: =");}
| <EQ> { System.out.println("Igualdade: ==");}
| <LPAR> { System.out.println("Abre parênteses: (");}
| <RPAR> { System.out.println("Fecha parênteses: )");}
| <LESS> { System.out.println("Menor que: <");}
| <GREATER> { System.out.println("Maior que: >");}
| <OR> { System.out.println("Op. OU: |");}
| <AND> { System.out.println("Op. E: &");}
| <SEPARATOR> { System.out.println("Separador: ,");}
| <FUNC> {System.out.println("Palavra reservada: func");}
)*
<EOF> 


}





